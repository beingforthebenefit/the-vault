{"ast":null,"code":"export const isObject = e => e && \"object\" == typeof e;\nexport const renameProp = (e, t, _ref) => {\n  let {\n    [e]: r,\n    ...c\n  } = _ref;\n  return {\n    [t]: r,\n    ...c\n  };\n};\nexport const copyObject = e => isObject(e) ? e instanceof Array ? [...e] : {\n  ...e\n} : e;\nexport const omitObject = (e, t) => {\n  if (!isObject(e)) return e;\n  if (e instanceof Array) return [...e];\n  const r = {\n    ...e\n  };\n  return t.forEach(e => r[e] && delete r[e]), r;\n};\nexport const cleanObject = e => {\n  if (!isObject(e)) return e;\n  if (e instanceof Array) return [...e];\n  const t = {\n    ...e\n  };\n  return Object.keys(t).forEach(e => {\n    void 0 !== t[e] && null !== t[e] || delete t[e];\n  }), t;\n};\nexport const cleanObjectKeys = function (e) {\n  let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!isObject(e)) return e;\n  if (e instanceof Array) return [...e];\n  const r = {\n    ...e\n  };\n  return t.forEach(e => {\n    r[e] && delete r[e];\n  }), r;\n};\nexport const getKeyValue = (e, t) => isObject(e) ? e instanceof Array ? [...e] : e[t] : e;","map":{"version":3,"names":["isObject","e","renameProp","t","_ref","r","c","copyObject","Array","omitObject","forEach","cleanObject","Object","keys","cleanObjectKeys","arguments","length","undefined","getKeyValue"],"sources":["/home/runner/work/the-vault/the-vault/node_modules/@nextui-org/react/esm/utils/object.js"],"sourcesContent":["export const isObject=e=>e&&\"object\"==typeof e;export const renameProp=(e,t,{[e]:r,...c})=>({[t]:r,...c});export const copyObject=e=>isObject(e)?e instanceof Array?[...e]:{...e}:e;export const omitObject=(e,t)=>{if(!isObject(e))return e;if(e instanceof Array)return[...e];const r={...e};return t.forEach((e=>r[e]&&delete r[e])),r};export const cleanObject=e=>{if(!isObject(e))return e;if(e instanceof Array)return[...e];const t={...e};return Object.keys(t).forEach((e=>{void 0!==t[e]&&null!==t[e]||delete t[e]})),t};export const cleanObjectKeys=(e,t=[])=>{if(!isObject(e))return e;if(e instanceof Array)return[...e];const r={...e};return t.forEach((e=>{r[e]&&delete r[e]})),r};export const getKeyValue=(e,t)=>isObject(e)?e instanceof Array?[...e]:e[t]:e;"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAACC,CAAC,IAAEA,CAAC,IAAE,QAAQ,IAAE,OAAOA,CAAC;AAAC,OAAO,MAAMC,UAAU,GAACA,CAACD,CAAC,EAACE,CAAC,EAAAC,IAAA;EAAA,IAAC;IAAC,CAACH,CAAC,GAAEI,CAAC;IAAC,GAAGC;EAAC,CAAC,GAAAF,IAAA;EAAA,OAAI;IAAC,CAACD,CAAC,GAAEE,CAAC;IAAC,GAAGC;EAAC,CAAC;AAAA,CAAC;AAAC,OAAO,MAAMC,UAAU,GAACN,CAAC,IAAED,QAAQ,CAACC,CAAC,CAAC,GAACA,CAAC,YAAYO,KAAK,GAAC,CAAC,GAAGP,CAAC,CAAC,GAAC;EAAC,GAAGA;AAAC,CAAC,GAACA,CAAC;AAAC,OAAO,MAAMQ,UAAU,GAACA,CAACR,CAAC,EAACE,CAAC,KAAG;EAAC,IAAG,CAACH,QAAQ,CAACC,CAAC,CAAC,EAAC,OAAOA,CAAC;EAAC,IAAGA,CAAC,YAAYO,KAAK,EAAC,OAAM,CAAC,GAAGP,CAAC,CAAC;EAAC,MAAMI,CAAC,GAAC;IAAC,GAAGJ;EAAC,CAAC;EAAC,OAAOE,CAAC,CAACO,OAAO,CAAET,CAAC,IAAEI,CAAC,CAACJ,CAAC,CAAC,IAAE,OAAOI,CAAC,CAACJ,CAAC,CAAE,CAAC,EAACI,CAAC;AAAA,CAAC;AAAC,OAAO,MAAMM,WAAW,GAACV,CAAC,IAAE;EAAC,IAAG,CAACD,QAAQ,CAACC,CAAC,CAAC,EAAC,OAAOA,CAAC;EAAC,IAAGA,CAAC,YAAYO,KAAK,EAAC,OAAM,CAAC,GAAGP,CAAC,CAAC;EAAC,MAAME,CAAC,GAAC;IAAC,GAAGF;EAAC,CAAC;EAAC,OAAOW,MAAM,CAACC,IAAI,CAACV,CAAC,CAAC,CAACO,OAAO,CAAET,CAAC,IAAE;IAAC,KAAK,CAAC,KAAGE,CAAC,CAACF,CAAC,CAAC,IAAE,IAAI,KAAGE,CAAC,CAACF,CAAC,CAAC,IAAE,OAAOE,CAAC,CAACF,CAAC,CAAC;EAAA,CAAE,CAAC,EAACE,CAAC;AAAA,CAAC;AAAC,OAAO,MAAMW,eAAe,GAAC,SAAAA,CAACb,CAAC,EAAQ;EAAA,IAAPE,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,EAAE;EAAI,IAAG,CAACf,QAAQ,CAACC,CAAC,CAAC,EAAC,OAAOA,CAAC;EAAC,IAAGA,CAAC,YAAYO,KAAK,EAAC,OAAM,CAAC,GAAGP,CAAC,CAAC;EAAC,MAAMI,CAAC,GAAC;IAAC,GAAGJ;EAAC,CAAC;EAAC,OAAOE,CAAC,CAACO,OAAO,CAAET,CAAC,IAAE;IAACI,CAAC,CAACJ,CAAC,CAAC,IAAE,OAAOI,CAAC,CAACJ,CAAC,CAAC;EAAA,CAAE,CAAC,EAACI,CAAC;AAAA,CAAC;AAAC,OAAO,MAAMa,WAAW,GAACA,CAACjB,CAAC,EAACE,CAAC,KAAGH,QAAQ,CAACC,CAAC,CAAC,GAACA,CAAC,YAAYO,KAAK,GAAC,CAAC,GAAGP,CAAC,CAAC,GAACA,CAAC,CAACE,CAAC,CAAC,GAACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}