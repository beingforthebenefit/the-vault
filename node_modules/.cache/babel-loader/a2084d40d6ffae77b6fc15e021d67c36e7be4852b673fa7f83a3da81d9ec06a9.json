{"ast":null,"code":"import $iFADg$react, { useContext as $iFADg$useContext, useState as $iFADg$useState, useEffect as $iFADg$useEffect, useMemo as $iFADg$useMemo, useCallback as $iFADg$useCallback, useRef as $iFADg$useRef } from \"react\";\nimport { useIsSSR as $iFADg$useIsSSR } from \"@react-aria/ssr\";\nimport { MessageDictionary as $iFADg$MessageDictionary, MessageFormatter as $iFADg$MessageFormatter } from \"@internationalized/message\";\nimport { DateFormatter as $iFADg$DateFormatter } from \"@internationalized/date\";\nimport { NumberFormatter as $iFADg$NumberFormatter } from \"@internationalized/number\";\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $18f2051aff69b9bf$exports = {};\n$parcel$export($18f2051aff69b9bf$exports, \"I18nProvider\", () => $18f2051aff69b9bf$export$a54013f0d02a8f82);\n$parcel$export($18f2051aff69b9bf$exports, \"useLocale\", () => $18f2051aff69b9bf$export$43bb16f9c6d9e3f7);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // https://en.wikipedia.org/wiki/Right-to-left\nconst $148a7a147e38ea7f$var$RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst $148a7a147e38ea7f$var$RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\nfunction $148a7a147e38ea7f$export$702d680b21cbd764(locale) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);\n  }\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);\n}\nfunction $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {\n  // @ts-ignore\n  let locale = typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage) || 'en-US';\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n  return {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  };\n}\nlet $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\nlet $1e5a04cdaf7d1af8$var$listeners = new Set();\nfunction $1e5a04cdaf7d1af8$var$updateLocale() {\n  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\n  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);\n}\nfunction $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {\n  let isSSR = $iFADg$useIsSSR();\n  let [defaultLocale, setDefaultLocale] = $iFADg$useState($1e5a04cdaf7d1af8$var$currentLocale);\n  $iFADg$useEffect(() => {\n    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);\n    return () => {\n      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);\n      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    };\n  }, []);\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) return {\n    locale: 'en-US',\n    direction: 'ltr'\n  };\n  return defaultLocale;\n}\nconst $18f2051aff69b9bf$var$I18nContext = /*#__PURE__*/$iFADg$react.createContext(null);\nfunction $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {\n  let {\n    locale: locale,\n    children: children\n  } = props;\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let value = locale ? {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n  return /*#__PURE__*/$iFADg$react.createElement($18f2051aff69b9bf$var$I18nContext.Provider, {\n    value: value\n  }, children);\n}\nfunction $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let context = $iFADg$useContext($18f2051aff69b9bf$var$I18nContext);\n  return context || defaultLocale;\n}\nvar $321bc95feeb923dd$exports = {};\n$parcel$export($321bc95feeb923dd$exports, \"useMessageFormatter\", () => $321bc95feeb923dd$export$ec23bf898b1eed85);\nconst $321bc95feeb923dd$var$cache = new WeakMap();\nfunction $321bc95feeb923dd$var$getCachedDictionary(strings) {\n  let dictionary = $321bc95feeb923dd$var$cache.get(strings);\n  if (!dictionary) {\n    dictionary = new $iFADg$MessageDictionary(strings);\n    $321bc95feeb923dd$var$cache.set(strings, dictionary);\n  }\n  return dictionary;\n}\nfunction $321bc95feeb923dd$export$ec23bf898b1eed85(strings) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let dictionary = $iFADg$useMemo(() => $321bc95feeb923dd$var$getCachedDictionary(strings), [strings]);\n  let formatter = $iFADg$useMemo(() => new $iFADg$MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return $iFADg$useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\nvar $896ba0a80a8f4d36$exports = {};\n$parcel$export($896ba0a80a8f4d36$exports, \"useDateFormatter\", () => $896ba0a80a8f4d36$export$85fd5fdf27bacc79);\nfunction $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = $iFADg$useRef(null);\n  if (options && lastOptions.current && $896ba0a80a8f4d36$var$isEqual(options, lastOptions.current)) options = lastOptions.current;\n  lastOptions.current = options;\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$DateFormatter(locale, options), [locale, options]);\n}\nfunction $896ba0a80a8f4d36$var$isEqual(a, b) {\n  if (a === b) return true;\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) return false;\n  }\n  return true;\n}\nvar $a916eb452884faea$exports = {};\n$parcel$export($a916eb452884faea$exports, \"useNumberFormatter\", () => $a916eb452884faea$export$b7a616150fdb9f44);\nfunction $a916eb452884faea$export$b7a616150fdb9f44() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$NumberFormatter(locale, options), [locale, options]);\n}\nvar $325a3faab7a68acd$exports = {};\n$parcel$export($325a3faab7a68acd$exports, \"useCollator\", () => $325a3faab7a68acd$export$a16aca283550c30d);\nlet $325a3faab7a68acd$var$cache = new Map();\nfunction $325a3faab7a68acd$export$a16aca283550c30d(options) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);\n  let formatter = new Intl.Collator(locale, options);\n  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);\n  return formatter;\n}\nvar $bb77f239b46e8c72$exports = {};\n$parcel$export($bb77f239b46e8c72$exports, \"useFilter\", () => $bb77f239b46e8c72$export$3274cf84b703fff);\nfunction $bb77f239b46e8c72$export$3274cf84b703fff(options) {\n  let collator = $325a3faab7a68acd$export$a16aca283550c30d({\n    usage: 'search',\n    ...options\n  });\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) return true;\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) return true;\n      }\n      return false;\n    }\n  };\n}\nexport { $18f2051aff69b9bf$export$a54013f0d02a8f82 as I18nProvider, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 as useLocale, $321bc95feeb923dd$export$ec23bf898b1eed85 as useMessageFormatter, $896ba0a80a8f4d36$export$85fd5fdf27bacc79 as useDateFormatter, $a916eb452884faea$export$b7a616150fdb9f44 as useNumberFormatter, $325a3faab7a68acd$export$a16aca283550c30d as useCollator, $bb77f239b46e8c72$export$3274cf84b703fff as useFilter };","map":{"version":3,"names":["$148a7a147e38ea7f$var$RTL_SCRIPTS","Set","$148a7a147e38ea7f$var$RTL_LANGS","$148a7a147e38ea7f$export$702d680b21cbd764","locale","Intl","Locale","script","maximize","has","lang","split","$1e5a04cdaf7d1af8$export$f09106e7c6677ec5","navigator","language","userLanguage","DateTimeFormat","supportedLocalesOf","_err","direction","$1e5a04cdaf7d1af8$var$currentLocale","$1e5a04cdaf7d1af8$var$listeners","$1e5a04cdaf7d1af8$var$updateLocale","listener","$1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a","isSSR","$iFADg$useIsSSR","defaultLocale","setDefaultLocale","$iFADg$useState","$iFADg$useEffect","size","window","addEventListener","add","delete","removeEventListener","$18f2051aff69b9bf$var$I18nContext","$iFADg$react","createContext","$18f2051aff69b9bf$export$a54013f0d02a8f82","props","children","value","createElement","Provider","$18f2051aff69b9bf$export$43bb16f9c6d9e3f7","context","$iFADg$useContext","$321bc95feeb923dd$var$cache","WeakMap","$321bc95feeb923dd$var$getCachedDictionary","strings","dictionary","get","$iFADg$MessageDictionary","set","$321bc95feeb923dd$export$ec23bf898b1eed85","$iFADg$useMemo","formatter","$iFADg$MessageFormatter","$iFADg$useCallback","key","variables","format","$896ba0a80a8f4d36$export$85fd5fdf27bacc79","options","lastOptions","$iFADg$useRef","current","$896ba0a80a8f4d36$var$isEqual","$iFADg$DateFormatter","a","b","aKeys","Object","keys","bKeys","length","$a916eb452884faea$export$b7a616150fdb9f44","arguments","undefined","$iFADg$NumberFormatter","$325a3faab7a68acd$var$cache","Map","$325a3faab7a68acd$export$a16aca283550c30d","cacheKey","entries","sort","join","Collator","$bb77f239b46e8c72$export$3274cf84b703fff","collator","usage","startsWith","string","substring","normalize","compare","slice","endsWith","contains","scan","sliceLen"],"sources":["/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/index.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/context.tsx","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/utils.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useDefaultLocale.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useMessageFormatter.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useDateFormatter.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useNumberFormatter.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useCollator.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useFilter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './context';\nexport * from './useMessageFormatter';\nexport * from './useDateFormatter';\nexport * from './useNumberFormatter';\nexport * from './useCollator';\nexport * from './useFilter';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\ninterface ProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: ProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedStrings, MessageDictionary, MessageFormatter} from '@internationalized/message';\nimport {useCallback, useMemo} from 'react';\nimport {useLocale} from './context';\n\nexport type FormatMessage = (key: string, variables?: {[key: string]: any}) => string;\n\nconst cache = new WeakMap();\nfunction getCachedDictionary(strings: LocalizedStrings) {\n  let dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new MessageDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n */\nexport function useMessageFormatter(strings: LocalizedStrings): FormatMessage {\n  let {locale} = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  let formatter = useMemo(() => new MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter} from '@internationalized/date';\nimport {useLocale} from './context';\nimport {useMemo, useRef} from 'react';\n\ninterface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: DateFormatterOptions): DateFormatter {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = useRef(null);\n  if (options && lastOptions.current && isEqual(options, lastOptions.current)) {\n    options = lastOptions.current;\n  }\n\n  lastOptions.current = options;\n\n  let {locale} = useLocale();\n  return useMemo(() => new DateFormatter(locale, options), [locale, options]);\n}\n\nfunction isEqual(a: DateFormatterOptions, b: DateFormatterOptions) {\n  if (a === b) {\n    return true;\n  }\n\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCollator} from './useCollator';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}