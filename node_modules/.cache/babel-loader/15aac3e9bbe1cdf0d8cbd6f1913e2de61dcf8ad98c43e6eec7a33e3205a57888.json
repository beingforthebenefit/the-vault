{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{Button,Modal,useModal,Text,Loading,Grid}from'@nextui-org/react';import backgroundImage from'./assets/background.png';import{db}from'./firebase';import{collection,onSnapshot,doc,updateDoc,increment,writeBatch,setDoc,getDoc,Timestamp}from'firebase/firestore';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[games,setGames]=useState([]);const[loading,setLoading]=useState(true);const{setVisible,bindings}=useModal();const[timerEnds,setTimerEnds]=useState(null);const[secondsLeft,setSecondsLeft]=useState(null);const[winnerModalVisible,setWinnerModalVisible]=useState(false);const[winningGame,setWinningGame]=useState(null);const[selectGameModalVisible,setSelectGameModalVisible]=useState(false);const[voteCast,setVoteCast]=useState(false);const startVoting=async()=>{const now=new Date();if(!timerEnds||now>=timerEnds){// Timer expired, start a new voting session\nconst newTimerEnds=new Date(now.getTime()+60000);// 60 seconds from now\nconst timerRef=doc(db,'timer','timer');await setDoc(timerRef,{votingEndsAt:Timestamp.fromDate(newTimerEnds)});setTimerEnds(newTimerEnds);startCountdown(newTimerEnds);}setVisible(true);};const resetVotesAfterWinner=useCallback(async()=>{const batch=writeBatch(db);games.forEach(game=>{const gameRef=doc(db,'games',game.id);batch.update(gameRef,{votes:0});});await batch.commit();},[games]);const determineWinner=useCallback(()=>{let maxVotes=-1;let winner=null;games.forEach(game=>{if(game.votes>maxVotes){maxVotes=game.votes;winner=game;}});setWinningGame(winner);setWinnerModalVisible(true);resetVotesAfterWinner();},[games,setWinningGame,setWinnerModalVisible,resetVotesAfterWinner]);const startCountdown=useCallback(endTime=>{const interval=setInterval(()=>{const now=new Date();const timeLeft=Math.max(Math.floor((endTime-now)/1000),0);setSecondsLeft(timeLeft);if(timeLeft===0){clearInterval(interval);determineWinner();}},1000);return()=>clearInterval(interval);},[determineWinner]);const handleVote=async gameId=>{const gameRef=doc(db,'games',gameId);await updateDoc(gameRef,{votes:increment(1)});setVoteCast(true);setVisible(false);};const resetVotes=async()=>{const batch=writeBatch(db);games.forEach(game=>{const gameRef=doc(db,'games',game.id);batch.update(gameRef,{votes:0});});await batch.commit();};useEffect(()=>{const timerRef=doc(db,'timer','timer');getDoc(timerRef).then(docSnap=>{if(docSnap.exists()){const timerEndsAt=docSnap.data().votingEndsAt.toDate();setTimerEnds(timerEndsAt);if(new Date()<timerEndsAt){startCountdown(timerEndsAt);}}});},[startCountdown]);useEffect(()=>{const determineWinner=()=>{let maxVotes=-1;let winner=null;games.forEach(game=>{if(game.votes>maxVotes){maxVotes=game.votes;winner=game;}});setWinningGame(winner);setWinnerModalVisible(true);};if(timerEnds){const interval=setInterval(()=>{const now=new Date();const timeLeft=Math.max(Math.floor((timerEnds-now)/1000),0);setSecondsLeft(timeLeft);if(timeLeft===0){clearInterval(interval);determineWinner();}},1000);return()=>clearInterval(interval);}},[timerEnds,games]);useEffect(()=>{const unsubscribe=onSnapshot(collection(db,'games'),snapshot=>{setGames(snapshot.docs.map(doc=>({...doc.data(),id:doc.id})));setLoading(false);});return()=>unsubscribe();},[]);const renderVoteModalContent=()=>/*#__PURE__*/_jsxs(Modal,{...bindings,children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Text,{size:18,children:\"Vote for a Game\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:games.map(game=>/*#__PURE__*/_jsx(Button,{onClick:()=>handleVote(game.id),children:game.name},game.id))})]});const renderSelectGameModalContent=()=>/*#__PURE__*/_jsxs(Modal,{open:selectGameModalVisible,onClose:()=>setSelectGameModalVisible(false),children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Text,{size:18,children:\"Select a Game\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:games.map(game=>/*#__PURE__*/_jsx(Button,{onClick:()=>window.location.href=game.url,children:game.name},game.id))})]});const renderWinnerModal=()=>/*#__PURE__*/_jsxs(Modal,{open:winnerModalVisible,onClose:()=>setWinnerModalVisible(false),children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsxs(Text,{size:18,children:[\"Winner: \",winningGame===null||winningGame===void 0?void 0:winningGame.name]})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(Button,{onClick:()=>window.location.href=winningGame===null||winningGame===void 0?void 0:winningGame.url,children:\"Go to Game\"})})]});return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundImage:\"url(\".concat(backgroundImage,\")\"),backgroundSize:'cover',backgroundPosition:'center',backgroundRepeat:'no-repeat',padding:0,margin:0,width:'100vw',height:'100vh'},children:[loading?/*#__PURE__*/_jsx(Loading,{size:\"lg\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{h1:true,align:\"center\",color:\"white\",style:{paddingTop:20},children:\"The Vault\"}),voteCast&&/*#__PURE__*/_jsx(Text,{shadow:true,size:24,align:\"center\",color:\"white\",style:{paddingTop:150},children:\"Vote Cast!\"}),/*#__PURE__*/_jsxs(Grid.Container,{gap:2,justify:\"center\",alignItems:\"center\",style:{minHeight:'80vh'},children:[/*#__PURE__*/_jsx(Grid,{xs:6,justify:\"center\",children:/*#__PURE__*/_jsx(Button,{shadow:true,size:\"lg\",color:\"gradient\",onClick:startVoting,disabled:voteCast,children:\"Vote on a Game\"})}),/*#__PURE__*/_jsx(Grid,{xs:6,justify:\"center\",children:/*#__PURE__*/_jsx(Button,{shadow:true,size:\"lg\",color:\"gradient\",onClick:()=>setSelectGameModalVisible(true),disabled:voteCast,children:\"Select a Game\"})})]}),/*#__PURE__*/_jsx(Button,{size:\"sm\",auto:true,color:\"error\",onClick:resetVotes,style:{position:'absolute',top:20,right:20},children:\"Reset Votes\"}),renderVoteModalContent(),renderSelectGameModalContent(),renderWinnerModal()]}),secondsLeft>0&&/*#__PURE__*/_jsxs(Text,{size:18,color:\"white\",style:{position:'absolute',bottom:20,right:20},children:[\"Voting ends in: \",secondsLeft,\" seconds\"]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","useCallback","Button","Modal","useModal","Text","Loading","Grid","backgroundImage","db","collection","onSnapshot","doc","updateDoc","increment","writeBatch","setDoc","getDoc","Timestamp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","games","setGames","loading","setLoading","setVisible","bindings","timerEnds","setTimerEnds","secondsLeft","setSecondsLeft","winnerModalVisible","setWinnerModalVisible","winningGame","setWinningGame","selectGameModalVisible","setSelectGameModalVisible","voteCast","setVoteCast","startVoting","now","Date","newTimerEnds","getTime","timerRef","votingEndsAt","fromDate","startCountdown","resetVotesAfterWinner","batch","forEach","game","gameRef","id","update","votes","commit","determineWinner","maxVotes","winner","endTime","interval","setInterval","timeLeft","Math","max","floor","clearInterval","handleVote","gameId","resetVotes","then","docSnap","exists","timerEndsAt","data","toDate","unsubscribe","snapshot","docs","map","renderVoteModalContent","children","Header","size","Body","onClick","name","renderSelectGameModalContent","open","onClose","window","location","href","url","renderWinnerModal","style","concat","backgroundSize","backgroundPosition","backgroundRepeat","padding","margin","width","height","h1","align","color","paddingTop","shadow","Container","gap","justify","alignItems","minHeight","xs","disabled","auto","position","top","right","bottom"],"sources":["/home/runner/work/the-vault/the-vault/src/App.jsx"],"sourcesContent":["import React, {useEffect, useState, useCallback} from 'react'\nimport {Button, Modal, useModal, Text, Loading, Grid} from '@nextui-org/react'\nimport backgroundImage from './assets/background.png'\nimport {db} from './firebase'\nimport {collection, onSnapshot, doc, updateDoc, increment, writeBatch, setDoc, getDoc, Timestamp} from 'firebase/firestore'\n\nfunction App() {\n  const [games, setGames] = useState([])\n  const [loading, setLoading] = useState(true)\n  const {setVisible, bindings} = useModal()\n  const [timerEnds, setTimerEnds] = useState(null)\n  const [secondsLeft, setSecondsLeft] = useState(null)\n  const [winnerModalVisible, setWinnerModalVisible] = useState(false)\n  const [winningGame, setWinningGame] = useState(null)\n  const [selectGameModalVisible, setSelectGameModalVisible] = useState(false)\n  const [voteCast, setVoteCast] = useState(false)\n\n  const startVoting = async () => {\n    const now = new Date()\n    if (!timerEnds || now >= timerEnds) {\n      // Timer expired, start a new voting session\n      const newTimerEnds = new Date(now.getTime() + 60000) // 60 seconds from now\n      const timerRef = doc(db, 'timer', 'timer')\n      await setDoc(timerRef, { votingEndsAt: Timestamp.fromDate(newTimerEnds) })\n      setTimerEnds(newTimerEnds)\n      startCountdown(newTimerEnds)\n    }\n    setVisible(true)\n  }\n\n  const resetVotesAfterWinner = useCallback(async () => {\n    const batch = writeBatch(db)\n    games.forEach(game => {\n      const gameRef = doc(db, 'games', game.id)\n      batch.update(gameRef, { votes: 0 })\n    })\n    await batch.commit()\n  }, [games])\n\n  const determineWinner = useCallback(() => {\n    let maxVotes = -1\n    let winner = null\n\n    games.forEach(game => {\n      if (game.votes > maxVotes) {\n        maxVotes = game.votes\n        winner = game\n      }\n    })\n\n    setWinningGame(winner)\n    setWinnerModalVisible(true)\n    resetVotesAfterWinner()\n  }, [games, setWinningGame, setWinnerModalVisible, resetVotesAfterWinner])\n\n  const startCountdown = useCallback((endTime) => {\n    const interval = setInterval(() => {\n      const now = new Date()\n      const timeLeft = Math.max(Math.floor((endTime - now) / 1000), 0)\n      setSecondsLeft(timeLeft)\n\n      if (timeLeft === 0) {\n        clearInterval(interval)\n        determineWinner()\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [determineWinner])\n\n  const handleVote = async (gameId) => {\n    const gameRef = doc(db, 'games', gameId)\n    await updateDoc(gameRef, { votes: increment(1) })\n    setVoteCast(true)\n    setVisible(false)\n  }\n\n  const resetVotes = async () => {\n    const batch = writeBatch(db)\n    games.forEach(game => {\n      const gameRef = doc(db, 'games', game.id)\n      batch.update(gameRef, { votes: 0 })\n    })\n    await batch.commit()\n  }\n\n  useEffect(() => {\n    const timerRef = doc(db, 'timer', 'timer')\n    getDoc(timerRef).then(docSnap => {\n      if (docSnap.exists()) {\n        const timerEndsAt = docSnap.data().votingEndsAt.toDate()\n        setTimerEnds(timerEndsAt)\n\n        if (new Date() < timerEndsAt) {\n          startCountdown(timerEndsAt)\n        }\n      }\n    })\n  }, [startCountdown])\n\n  useEffect(() => {\n    const determineWinner = () => {\n      let maxVotes = -1\n      let winner = null\n  \n      games.forEach(game => {\n        if (game.votes > maxVotes) {\n          maxVotes = game.votes\n          winner = game\n        }\n      })\n  \n      setWinningGame(winner)\n      setWinnerModalVisible(true)\n    }\n\n    if (timerEnds) {\n      const interval = setInterval(() => {\n        const now = new Date()\n        const timeLeft = Math.max(Math.floor((timerEnds - now) / 1000), 0)\n        setSecondsLeft(timeLeft)\n\n        if (timeLeft === 0) {\n          clearInterval(interval)\n          determineWinner()\n        }\n      }, 1000)\n\n      return () => clearInterval(interval)\n    }\n  }, [timerEnds, games])\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, 'games'), (snapshot) => {\n      setGames(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n      setLoading(false)\n    })\n\n    return () => unsubscribe()\n  }, [])\n\n  const renderVoteModalContent = () => (\n    <Modal {...bindings}>\n      <Modal.Header>\n        <Text size={18}>Vote for a Game</Text>\n      </Modal.Header>\n      <Modal.Body>\n        {games.map(game => (\n          <Button key={game.id} onClick={() => handleVote(game.id)}>{game.name}</Button>\n        ))}\n      </Modal.Body>\n    </Modal>\n  )\n\n  const renderSelectGameModalContent = () => (\n    <Modal open={selectGameModalVisible} onClose={() => setSelectGameModalVisible(false)}>\n      <Modal.Header>\n        <Text size={18}>Select a Game</Text>\n      </Modal.Header>\n      <Modal.Body>\n        {games.map(game => (\n          <Button key={game.id} onClick={() => window.location.href = game.url}>{game.name}</Button>\n        ))}\n      </Modal.Body>\n    </Modal>\n  )\n\n  const renderWinnerModal = () => (\n    <Modal open={winnerModalVisible} onClose={() => setWinnerModalVisible(false)}>\n      <Modal.Header>\n        <Text size={18}>Winner: {winningGame?.name}</Text>\n      </Modal.Header>\n      <Modal.Body>\n        <Button onClick={() => window.location.href = winningGame?.url}>Go to Game</Button>\n      </Modal.Body>\n    </Modal>\n  )\n\n  return (\n    <div style={{ backgroundImage: `url(${backgroundImage})`, backgroundSize: 'cover', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', padding: 0, margin: 0, width: '100vw', height: '100vh' }}>\n      {loading ? <Loading size=\"lg\" /> : (\n        <>\n          <Text h1 align=\"center\" color=\"white\" style={{ paddingTop: 20 }}>The Vault</Text>\n          {voteCast && <Text shadow size={24} align=\"center\" color=\"white\" style={{ paddingTop: 150 }}>Vote Cast!</Text>}\n          <Grid.Container gap={2} justify=\"center\" alignItems=\"center\" style={{ minHeight: '80vh' }}>\n            <Grid xs={6} justify=\"center\">\n              <Button shadow size=\"lg\" color=\"gradient\" onClick={startVoting} disabled={voteCast}>Vote on a Game</Button>\n            </Grid>\n            <Grid xs={6} justify=\"center\">\n              <Button shadow size=\"lg\" color=\"gradient\" onClick={() => setSelectGameModalVisible(true)} disabled={voteCast}>Select a Game</Button>\n            </Grid>\n          </Grid.Container>\n          {/* <Grid.Container gap={2} justify=\"center\" style={{ minHeight: '20vh', padding: '10px' }}>\n            {games.map(game => (\n              <Grid xs={3} key={game.id}>\n                <Card shadow hoverable clickable css={{ h: '100%', d: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                  <Text size={18} weight=\"bold\" css={{ textAlign: 'center' }}>{game.name}</Text>\n                  <Text css={{ textAlign: 'center' }}>Votes: {game.votes}</Text>\n                </Card>\n              </Grid>\n            ))}\n          </Grid.Container> */}\n          <Button size=\"sm\" auto color=\"error\" onClick={resetVotes} style={{ position: 'absolute', top: 20, right: 20 }}>Reset Votes</Button>\n          {renderVoteModalContent()}\n          {renderSelectGameModalContent()}\n          {renderWinnerModal()}\n        </>\n      )}\n      {secondsLeft > 0 && <Text size={18} color=\"white\" style={{ position: 'absolute', bottom: 20, right: 20 }}>Voting ends in: {secondsLeft} seconds</Text>}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}