{"ast":null,"code":"import { mergeProps as $9BxnE$mergeProps } from \"@react-aria/utils\";\nimport $9BxnE$react, { useState as $9BxnE$useState, useMemo as $9BxnE$useMemo } from \"react\";\nimport { useFocus as $9BxnE$useFocus } from \"@react-aria/interactions\";\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $5c3e21d68f1c4674$exports = {};\n$parcel$export($5c3e21d68f1c4674$exports, \"useVisuallyHidden\", () => $5c3e21d68f1c4674$export$a966af930f325cab);\n$parcel$export($5c3e21d68f1c4674$exports, \"VisuallyHidden\", () => $5c3e21d68f1c4674$export$439d29a4e110a164);\nconst $5c3e21d68f1c4674$var$styles = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\nfunction $5c3e21d68f1c4674$export$a966af930f325cab() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    style: style,\n    isFocusable: isFocusable\n  } = props;\n  let [isFocused, setFocused] = $9BxnE$useState(false);\n  let {\n    focusProps: focusProps\n  } = $9BxnE$useFocus({\n    isDisabled: !isFocusable,\n    onFocusChange: setFocused\n  });\n  // If focused, don't hide the element.\n  let combinedStyles = $9BxnE$useMemo(() => {\n    if (isFocused) return style;else if (style) return {\n      ...$5c3e21d68f1c4674$var$styles,\n      ...style\n    };else return $5c3e21d68f1c4674$var$styles;\n  }, [isFocused]);\n  return {\n    visuallyHiddenProps: {\n      ...focusProps,\n      style: combinedStyles\n    }\n  };\n}\nfunction $5c3e21d68f1c4674$export$439d29a4e110a164(props) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {\n    children: children,\n    elementType: Element = 'div',\n    isFocusable: isFocusable,\n    style: style,\n    ...otherProps\n  } = props;\n  let {\n    visuallyHiddenProps: visuallyHiddenProps\n  } = $5c3e21d68f1c4674$export$a966af930f325cab(props);\n  return /*#__PURE__*/$9BxnE$react.createElement(Element, $9BxnE$mergeProps(otherProps, visuallyHiddenProps), children);\n}\nexport { $5c3e21d68f1c4674$export$a966af930f325cab as useVisuallyHidden, $5c3e21d68f1c4674$export$439d29a4e110a164 as VisuallyHidden };","map":{"version":3,"names":["$5c3e21d68f1c4674$var$styles","border","clip","clipPath","height","margin","overflow","padding","position","width","whiteSpace","$5c3e21d68f1c4674$export$a966af930f325cab","props","arguments","length","undefined","style","isFocusable","isFocused","setFocused","$9BxnE$useState","focusProps","$9BxnE$useFocus","isDisabled","onFocusChange","combinedStyles","$9BxnE$useMemo","visuallyHiddenProps","$5c3e21d68f1c4674$export$439d29a4e110a164","children","elementType","Element","otherProps","$9BxnE$react","createElement","$9BxnE$mergeProps"],"sources":["/home/runner/work/the-vault/the-vault/node_modules/@react-aria/visually-hidden/dist/packages/@react-aria/visually-hidden/src/index.ts","/home/runner/work/the-vault/the-vault/node_modules/@react-aria/visually-hidden/dist/packages/@react-aria/visually-hidden/src/VisuallyHidden.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './VisuallyHidden';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport React, {CSSProperties, HTMLAttributes, JSXElementConstructor, ReactNode, useMemo, useState} from 'react';\nimport {useFocus} from '@react-aria/interactions';\n\ninterface VisuallyHiddenProps extends HTMLAttributes<HTMLElement> {\n  /** The content to visually hide. */\n  children?: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the element should become visible on focus, for example skip links. */\n  isFocusable?: boolean\n}\n\nconst styles: CSSProperties = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\n\ninterface VisuallyHiddenAria {\n  visuallyHiddenProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides props for an element that hides its children visually\n * but keeps content visible to assistive technology.\n */\nexport function useVisuallyHidden(props: VisuallyHiddenProps = {}): VisuallyHiddenAria {\n  let {\n    style,\n    isFocusable\n  } = props;\n\n  let [isFocused, setFocused] = useState(false);\n  let {focusProps} = useFocus({\n    isDisabled: !isFocusable,\n    onFocusChange: setFocused\n  });\n\n  // If focused, don't hide the element.\n  let combinedStyles = useMemo(() => {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return {...styles, ...style};\n    } else {\n      return styles;\n    }\n  }, [isFocused]);\n\n  return {\n    visuallyHiddenProps: {\n      ...focusProps,\n      style: combinedStyles\n    }\n  };\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, elementType: Element = 'div', isFocusable, style, ...otherProps} = props;\n  let {visuallyHiddenProps} = useVisuallyHidden(props);\n\n  return (\n    <Element {...mergeProps(otherProps, visuallyHiddenProps)}>\n      {children}\n    </Element>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;AC8BA,MAAMA,4BAAM,GAAkB;EAC5BC,MAAM,EAAE,CAAC;EACTC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,eAAe;EACvBC,QAAQ,EAAE,QAAQ;EAClBC,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE,UAAU;EACpBC,KAAK,EAAE,CAAC;EACRC,UAAU,EAAE;AACd,CAAC;SAUeC,yCAAiBA,CAAA,EAAsD;EAAA,IAArDC,KAA0B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC/D,IAAI;IAACG,KAAA,EACHA,KAAK;IAAAC,WAAA,EACLA;EACF,CAAC,GAAGL,KAAK;EAET,IAAG,CAAEM,SAAS,EAAEC,UAAU,IAAIC,eAAQ,CAAC,KAAK;EAC5C,IAAI;IAACC,UAAA,EAAAA;EAAU,CAAC,GAAGC,eAAQ,CAAC;IAC1BC,UAAU,GAAGN,WAAW;IACxBO,aAAa,EAAEL;EACjB,CAAC;EAED;EACA,IAAIM,cAAc,GAAGC,cAAO,OAAO;IACjC,IAAIR,SAAS,EACX,OAAOF,KAAK,MACP,IAAIA,KAAK,EACd,OAAO;SAAIhB,4BAAM;SAAKgB;IAAK,CAAC,MAE5B,OAAOhB,4BAAM;EAEjB,CAAC,EAAE,CAACkB,SAAS,CAAC;EAEd,OAAO;IACLS,mBAAmB,EAAE;SAChBN,UAAU;MACbL,KAAK,EAAES;IACT;EACF,CAAC;AACH;SAMgBG,yCAAcA,CAAChB,KAA0B,EAAE;EACzD;EACA,IAAI;IAACiB,QAAA,EAAAA,QAAQ;IAAEC,WAAW,EAAEC,OAAO,GAAG,KAAK;IAAAd,WAAA,EAAEA,WAAW;IAAAD,KAAA,EAAEA,KAAK;IAAA,GAAKgB;EAAU,CAAC,GAAGpB,KAAK;EACvF,IAAI;IAACe,mBAAA,EAAAA;EAAmB,CAAC,GAAGhB,yCAAiB,CAACC,KAAK;EAEnD,OAAM,aAAAqB,YAAA,CAAAC,aAAA,CACHH,OAAO,EAAKI,iBAAU,CAACH,UAAU,EAAEL,mBAAmB,GACpDE,QAAQ;AAGf"},"metadata":{},"sourceType":"module","externalDependencies":[]}